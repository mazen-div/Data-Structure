class Stacklinkedlist {

    private class Node {
 
        int data; 
        Node link; 
    }
   
    Node top;
    
    Stacklinkedlist()
    {
        this.top = null;
    }
 
 
    public void push(int x)
    {
      
        Node temp = new Node();
 
     
        if (temp == null) {
            System.out.print("\nHeap Overflow");
            return;
        }
 
        temp.data = x;
        temp.link = top;
        top = temp;
    }
    public boolean isEmpty()
    {
        return top == null;
    }
    public int peek()
{
        if (!isEmpty()) {
            return top.data;
        }
        else {
            System.out.println("Stack is empty");
            return -1;
        }
    }
    public void pop()
    {
        if (top == null) {
            System.out.print("\nStack Underflow");
            return;
        }
 
        top = (top).link;
    }
 
    public void display()
    {
        if (top == null) {
            System.out.printf("\nStack Underflow");
            exit(1);
        }
        else {
            Node temp = top;
            while (temp != null) {
                System.out.printf("%d->", temp.data);
                temp = temp.link;
            }
        }
    }
}
public class stacklist {
    public static void main(String[] args)
    {
        Stacklinkedlist obj = new Stacklinkedlist();
        
        obj.push(10);
        obj.push(20);
        obj.push(30);
        obj.push(40);
        obj.display();
        System.out.printf("\nTop element is %d\n", obj.peek());
        obj.pop();
        obj.pop();
        obj.display();
        System.out.printf("\nTop element is %d\n", obj.peek());
    }
}